<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.example</groupId>
    <artifactId>OCR-Historica-Java</artifactId>
    <version>1.0-SNAPSHOT</version>
    <properties>
        <maven.compiler.source>19</maven.compiler.source>
        <maven.compiler.target>19</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <nd4j.version>1.0.0-beta7</nd4j.version>
        <deeplearning4j.version>1.0.0-beta7</deeplearning4j.version>
        <javacpp.version>1.5.10</javacpp.version>
        <opencv.version>4.9.0-1.5.10</opencv.version>
        <tess4j.version>5.0.0</tess4j.version>
        <jackson.version>2.15.2</jackson.version>
        <javafx.version>20</javafx.version>
        <onnxruntime.version>1.15.0</onnxruntime.version>
    </properties>
    <dependencies>
        <!-- Tess4J: Libreria Java per l'OCR (Optical Character Recognition) -->
        <dependency>
            <groupId>net.sourceforge.tess4j</groupId>
            <artifactId>tess4j</artifactId>
            <version>${tess4j.version}</version>
        </dependency>

        <!-- OpenCV: Libreria per l'elaborazione delle immagini e visione artificiale -->
        <dependency>
            <groupId>org.bytedeco</groupId>
            <artifactId>opencv-platform</artifactId>
            <version>${opencv.version}</version>
        </dependency>

        <!-- Jackson: Libreria per la serializzazione e deserializzazione JSON -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <!-- JavaFX: Framework per la creazione di interfacce grafiche in Java -->
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>${javafx.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-fxml</artifactId>
            <version>${javafx.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-graphics</artifactId>
            <version>${javafx.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-base</artifactId>
            <version>${javafx.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-swing</artifactId>
            <version>${javafx.version}</version>
        </dependency>

        <!-- DeepLearning4j Core: Libreria per il machine learning e le reti neurali -->
        <dependency>
            <groupId>org.deeplearning4j</groupId>
            <artifactId>deeplearning4j-core</artifactId>
            <version>${deeplearning4j.version}</version>
        </dependency>

        <!-- DeepLearning4j Datasets: Supporto per dataset di machine learning -->
        <dependency>
            <groupId>org.deeplearning4j</groupId>
            <artifactId>deeplearning4j-datasets</artifactId>
            <version>${deeplearning4j.version}</version>
        </dependency>

        <!-- DeepLearning4j NLP: Strumenti per l'elaborazione del linguaggio naturale (NLP) -->
        <dependency>
            <groupId>org.deeplearning4j</groupId>
            <artifactId>deeplearning4j-nlp</artifactId>
            <version>${deeplearning4j.version}</version>
        </dependency>

        <!-- DataVec API: Libreria per la gestione e trasformazione dei dati -->
        <dependency>
            <groupId>org.datavec</groupId>
            <artifactId>datavec-api</artifactId>
            <version>${nd4j.version}</version>
        </dependency>

        <!-- DeepLearning4j ModelImport: Supporto per l'importazione di modelli da altri framework -->
        <dependency>
            <groupId>org.deeplearning4j</groupId>
            <artifactId>deeplearning4j-modelimport</artifactId>
            <version>${deeplearning4j.version}</version>
        </dependency>

        <!-- ND4J Native Platform: Libreria per il calcolo numerico su CPU/GPU -->
        <dependency>
            <groupId>org.nd4j</groupId>
            <artifactId>nd4j-native-platform</artifactId>
            <version>${nd4j.version}</version>
        </dependency>

        <!-- JavaCPP: Bridge tra Java e librerie native C++ -->
        <dependency>
            <groupId>org.bytedeco</groupId>
            <artifactId>javacpp</artifactId>
            <version>${javacpp.version}</version>
        </dependency>

        <!-- SLF4J NOP: Implementazione "no-operation" per il logging (disabilita i log) -->
        <!-- Disabilita i log generati da Deeplearning4j e altre librerie che utilizzano SLF4J. -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-nop</artifactId>
            <version>1.7.32</version>
        </dependency>

    </dependencies>
    <build>
        <plugins>
            <!-- Maven Compiler Plugin: Configura il compilatore Java -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                </configuration>
            </plugin>

            <!-- Maven Shade Plugin: Genera un JAR eseguibile completo -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.3.0</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <createDependencyReducedPom>false</createDependencyReducedPom>
                            <outputFile>${project.build.directory}/${project.artifactId}-${project.version}-shaded.jar</outputFile>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>it.unicam.cs.pg.gui.OCRHistoricaJavaLauncher</mainClass>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>